# /etc/bashrc

# (C) 2017 Gordon Engelke

# mkdir ~/.vim
# mkdir ~/.vim/bundle
# git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
# :PluginInstall

# System wide functions and aliases
# Environment stuff goes in /etc/profile

# It's NOT a good idea to change this file unless you know what you
# are doing. It's much better to create a custom.sh shell script in
# /etc/profile.d/ to make custom changes to your environment, as this
# will prevent the need for merging in future updates.

# The next line enables Docker Machine for default VM in MacOS
#if [[ $OSTYPE == 'darwin'* ]]; then
#   docker-machine active
#   if [ $? -eq 1 ]; then
#      source /Applications/Docker/Docker\ Quickstart\ Terminal.app/Contents/Resources/Scripts/start.sh
#   fi
#fi

# are we an interactive shell?
if [ "$PS1" ]; then
  if [ -z "$PROMPT_COMMAND" ]; then
    case $TERM in
    xterm*)
        if [ -e /etc/sysconfig/bash-prompt-xterm ]; then
            PROMPT_COMMAND=/etc/sysconfig/bash-prompt-xterm
        else
            PROMPT_COMMAND='printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"'
        fi
        ;;
    screen)
        if [ -e /etc/sysconfig/bash-prompt-screen ]; then
            PROMPT_COMMAND=/etc/sysconfig/bash-prompt-screen
        else
            PROMPT_COMMAND='printf "\033]0;%s@%s:%s\033\\" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"'
        fi
        ;;
    *)
        [ -e /etc/sysconfig/bash-prompt-default ] && PROMPT_COMMAND=/etc/sysconfig/bash-prompt-default
        ;;
      esac
  fi
  # Turn on checkwinsize
  shopt -s checkwinsize
  [ "$PS1" = "\\s-\\v\\\$ " ] && PS1="[\u@\h \W]\\$ "
  # You might want to have e.g. tty in prompt (e.g. more virtual machines)
  # and console windows
  # If you want to do so, just add e.g.
  # if [ "$PS1" ]; then
  #   PS1="[\u@\h:\l \W]\\$ "
  # fi
  # to your custom modification shell script in /etc/profile.d/ directory
fi

if ! shopt -q login_shell ; then # We're not a login shell
    # Need to redefine pathmunge, it get's undefined at the end of /etc/profile
    pathmunge () {
        case ":${PATH}:" in
            *:"$1":*)
                ;;
            *)
                if [ "$2" = "after" ] ; then
                    PATH=$PATH:$1
                else
                    PATH=$1:$PATH
                fi
        esac
    }

    # By default, we want umask to get set. This sets it for non-login shell.
    # Current threshold for system reserved uid/gids is 200
    # You could check uidgid reservation validity in
    # /usr/share/doc/setup-*/uidgid file
    if [ $UID -gt 199 ] && [ "`id -gn`" = "`id -un`" ]; then
       umask 002
    else
       umask 022
    fi

    # Only display echos from profile.d scripts if we are no login shell
    # and interactive - otherwise just process them to set envvars
    for i in /etc/profile.d/*.sh; do
        if [ -r "$i" ]; then
            if [ "$PS1" ]; then
                . "$i"
            else
                . "$i" >/dev/null 2>&1
            fi
        fi
    done

    unset i
    unset pathmunge
fi
# vim:ts=4:sw=4

# GE stuff
#
# User specific aliases and functions
#
#[[ $- == *i* ]] &&
stty -ixon  #allow the use of Ctrl-s in reverse search of bash.
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[C": forward-char'
bind '"\e[D": backward-char'
bind 'TAB:menu-complete'

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias dump='od -A x -t x1z -v'
fi
if [ -x /usr/bin/pygmentize ] || [ -x /usr/local/bin/pygmentize ]; then
    alias cat='pygmentize -O style=monokai -f console256 -g'
fi

alias gacp='git add . && git commit --message \"$@\" && git push'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias vi='vim'
alias ll='ls -al'
alias lll='ls -strahl'
alias posh='pwsh -nologo'

if [ -x /mnt/c/WINDOWS/system32/wsl.exe ]; then
  alias init='wsl.exe -d wsl-vpnkit service wsl-vpnkit start && sudo service cntlm start && sudo service docker start'
  alias wsl='wsl.exe'
fi

if ! [[ "$OSTYPE" == "darwin"* ]]; then
  alias pbcopy='xsel --clipboard --input'    #emulate OS X pbcopy. copes text-input to clipboard.
  alias pbpaste='xsel --clipboard --output'
  #alias pbcopy='xclip -selection clipboard'
  #alias pbpaste='xclip -selection clipboard -o'
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
  if [ -f $(brew --prefix)/etc/bash_completion ]; then
      . $(brew --prefix)/etc/bash_completion
  fi

  open -a XQuartz
  socat TCP-LISTEN:6000,reuseaddr,fork UNIX-CLIENT:\"$DISPLAY\" &
  export HOSTIP=$(ifconfig en0 | grep inet | awk '$1=="inet" {print $2}')
  xhost + $HOSTIP

  alias ls='ls -G'
fi

shopt -s histappend
export HISTCONTROL=ignoredups:erasedups
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"
#export HISTFILESIZE=10000000
unset HISTSIZE
export HISTSIZE
unset HISTFILESIZE
export HISTFILESIZE
#export HISTTIMEFORMAT="%F_%R  "
export HISTTIMEFORMAT="%d-%m-%y %T  "
export ANSIBLE_HOST_KEY_CHECKING=False

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

if ${use_color} ; then
        # Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
        if type -P dircolors >/dev/null ; then
                if [[ -f ~/.dir_colors ]] ; then
                        eval $(dircolors -b ~/.dir_colors)
                elif [[ -f /etc/DIR_COLORS ]] ; then
                        eval $(dircolors -b /etc/DIR_COLORS)
        else
            eval $(dircolors)
                fi
        fi

        if [[ ${EUID} == 0 ]] ; then
            #PS1='${debian_chroot:+($debian_chroot)}\[\033[0;31m\]\u@\[\033[1;31m\]\h\[\033[01;33m\] \w \$\[\033[00m\] '
            PS1="${debian_chroot:+($debian_chroot)}\[\033[1;31m\]\u\[\033[1;34m\]@\h\[\033[00m\]: \033[1;33m\]\w\033[0;36m\]\$(parse_git_branch) \n\[\033[00m\]\[\033[01;31m\]>\[\033[01;33m\]>\[\033[01;32m\]>\[\033[0m\] "
        else
            PS1="${debian_chroot:+($debian_chroot)}\[\033[1;32m\]\u\[\033[1;34m\]@\h\[\033[00m\]: \033[1;33m\]\w\033[0;36m\]\$(parse_git_branch) \n\[\033[00m\]\[\033[01;31m\]>\[\033[01;33m\]>\[\033[01;32m\]>\[\033[0m\] "
            #PS1="${debian_chroot:+($debian_chroot)}\[\033[0;32m\]\u \[\033[00m\]at \[\033[1;30m\]\h \[\033[00m\]in \033[01;33m\]\w\033[01;36m\]\$(parse_git_branch) \[\033[00m\]\$ "
        fi
else
        if [[ ${EUID} == 0 ]] ; then
                # show root@ when we don't have colors
                PS1='\u@\h \w \$ '
        else
                PS1='\u@\h \w \$ '
        fi
fi

#if [ -z "$STY" ]; then
#        screen -Rd "gengelke-screen"
#fi

man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

if command -v tmux>/dev/null; then
        case "/$(ps -p $PPID -o comm=)" in */sshd)
            [[ $- == *i* ]] && [[ ! $TERM =~ screen ]] && [[ -z $TMUX ]] && tmux attach -t ge_tmux || tmux new -s ge_tmux && return;;
        esac
fi

if command -v screen>/dev/null; then
    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ] || [ -z "$STY" ]; then
        case "/$(ps -p $PPID -o comm=)" in */sshd)
            [[ $- == *i* ]] && [[ ! $TERM =~ screen ]] && [[ -z $TMUX ]] && screen -Rd "ge-screen" && return;;
        esac
    fi
fi

if [ -f /usr/local/etc/bash_completion ]; then
    . /usr/local/etc/bash_completion
fi

#Syntax highlighting in cat
#cat() {
#    local out colored
#    out=$(/bin/cat $@)
#    colored=$(echo $out | pygmentize -f console -g 2>/dev/null)
#    [[ -n $colored ]] && echo "$colored" || echo "$out"
#}

#Colors for man pages
function _colorman() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;35m") \
    LESS_TERMCAP_md=$(printf "\e[1;34m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[7;40m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;33m") \
      "$@"
}
function man() { _colorman man "$@"; }
function perldoc() { command perldoc -n less "$@" |man -l -; }

#export http_proxy=localhost:3128
#export https_proxy=localhost:3128

export PATH=/opt/local/bin:/opt/local/sbin:/usr/local/bin:$PATH
#export HISTCONTROL=ignoredups:erasedups # no duplicate entries
export HISTSIZE=10000000                 # big big history
export HISTFILESIZE=10000000             # big big history
shopt -s histappend                      # append to history, don't overwrite it

# Save and reload the history after each command finishes
export PROMPT_COMMAND="history -a;history -n;$PROMPT_COMMAND"
#export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

export LC_ALL=en_US.UTF-8

clear

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/gengelke/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
